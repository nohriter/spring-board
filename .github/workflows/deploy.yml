name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .

      - name: Push Docker Image to AWS ECR
        run: docker push ${{ secrets.ECR_REPOSITORY }}:latest

      # SSH로 EC2 접속 및 배포
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > spring-gesipan.pem
          chmod 600 spring-gesipan.pem
          ssh -o StrictHostKeyChecking=no -i spring-gesipan.pem ec2-user@ec2-13-209-251-172.ap-northeast-2.compute.amazonaws.com << 'EOF'
          
            # AWS ECR 인증 갱신
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

            # 최신 이미지 가져오기
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest

            # 기존 컨테이너 중지 및 삭제
            docker stop spring-board || true
            docker rm spring-board || true

            # 새 컨테이너 실행
            docker run -d \
              --name spring-board \
              --restart unless-stopped \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e SPRING_PROFILES_ACTIVE=prod \
              -p 80:8080 \
              ${{ secrets.ECR_REPOSITORY }}:latest

            # 최근 2개 이미지만 남기고 나머지 삭제
            docker images -q ${{ secrets.ECR_REPOSITORY }} | tail -n +3 | xargs -r docker rmi

          EOF
